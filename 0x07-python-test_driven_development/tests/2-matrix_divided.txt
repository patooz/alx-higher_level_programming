=============================
Usage for 2-matrix_divided.py
=============================

Defines a matrix division
``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...	[3, 6, 9],
	...	[12, 15, 18]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Quotients are rounded to the max 2 decimal point

::

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Original matrix

::

	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]

Handle floating points

::

	>>> matrix = [
	...     [1.1, -2.2, 3.3],
	...     [4.4, 5.5, -6.6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.37, -0.73,1.1], [1.47, 1.83, -2.2]]

Put together floating points and integers

::

	>>> matrix = [
	...	[1, -2.2, 3, 4.4, 5],
	...	[-6.6, 7.00, 8, 9.999, 10]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Invalid matrix
==============

``matrix`` must be a list containing lists or integers

::

	>>> matrix = "not a list"
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = None
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

Empty list

::

	>>> matrix = []
	>>> print(matrix_divided(matrix, 3))
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Empty list will be successfull

::

	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 3))
	[[]]

If a matrix is not a list of lists

::

	>>> matrix = [1, 2, 3]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

If elements are neither interger or float

::

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, "string", 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

All rows must be same size

::

	matrix = [
	...	[1, 2, 3, 4],
	...	[5, 6, 7]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: Rows of a matrix must be the same

Invalid divs
============

``div`` must be an integer or a float

::

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, "not a number"))
	Traceback (most recent call last):
	TypeError: div must be a number

``div`` must not be a zero

::

	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
